// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: moonloop/class_template.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClassTemplate struct {
	CollectionIndex    string   `protobuf:"bytes,1,opt,name=collectionIndex,proto3" json:"collectionIndex,omitempty"`
	ClassTemplateIndex string   `protobuf:"bytes,2,opt,name=classTemplateIndex,proto3" json:"classTemplateIndex,omitempty"`
	Name               string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MintStrategy       string   `protobuf:"bytes,5,opt,name=mintStrategy,proto3" json:"mintStrategy,omitempty"`
	GltfHash           string   `protobuf:"bytes,6,opt,name=gltfHash,proto3" json:"gltfHash,omitempty"`
	Metadata           string   `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MaxInstances       int32    `protobuf:"varint,8,opt,name=maxInstances,proto3" json:"maxInstances,omitempty"`
	Count              int32    `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
	PowerupTemplates   []string `protobuf:"bytes,10,rep,name=powerupTemplates,proto3" json:"powerupTemplates,omitempty"`
	Creator            string   `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *ClassTemplate) Reset()         { *m = ClassTemplate{} }
func (m *ClassTemplate) String() string { return proto.CompactTextString(m) }
func (*ClassTemplate) ProtoMessage()    {}
func (*ClassTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bf2fbe948873ca2, []int{0}
}
func (m *ClassTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClassTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClassTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClassTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassTemplate.Merge(m, src)
}
func (m *ClassTemplate) XXX_Size() int {
	return m.Size()
}
func (m *ClassTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_ClassTemplate proto.InternalMessageInfo

func (m *ClassTemplate) GetCollectionIndex() string {
	if m != nil {
		return m.CollectionIndex
	}
	return ""
}

func (m *ClassTemplate) GetClassTemplateIndex() string {
	if m != nil {
		return m.ClassTemplateIndex
	}
	return ""
}

func (m *ClassTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClassTemplate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ClassTemplate) GetMintStrategy() string {
	if m != nil {
		return m.MintStrategy
	}
	return ""
}

func (m *ClassTemplate) GetGltfHash() string {
	if m != nil {
		return m.GltfHash
	}
	return ""
}

func (m *ClassTemplate) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *ClassTemplate) GetMaxInstances() int32 {
	if m != nil {
		return m.MaxInstances
	}
	return 0
}

func (m *ClassTemplate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ClassTemplate) GetPowerupTemplates() []string {
	if m != nil {
		return m.PowerupTemplates
	}
	return nil
}

func (m *ClassTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*ClassTemplate)(nil), "str11ngfello.moonloop.moonloop.ClassTemplate")
}

func init() { proto.RegisterFile("moonloop/class_template.proto", fileDescriptor_5bf2fbe948873ca2) }

var fileDescriptor_5bf2fbe948873ca2 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4e, 0x32, 0x31,
	0x14, 0xc5, 0x19, 0xfe, 0x53, 0xbe, 0x2f, 0x9a, 0xc6, 0x45, 0x63, 0x62, 0x33, 0x61, 0x35, 0x71,
	0x31, 0x84, 0xf8, 0x06, 0xba, 0x91, 0xb8, 0x43, 0x57, 0x6e, 0x4c, 0x29, 0x65, 0x98, 0xa4, 0xd3,
	0xdb, 0xb4, 0x97, 0x08, 0x6f, 0xe1, 0x63, 0xb9, 0x64, 0xe9, 0xd2, 0xc0, 0x63, 0xb8, 0x31, 0x14,
	0x07, 0x41, 0xdd, 0xdd, 0x73, 0x7e, 0xe7, 0xde, 0xb4, 0x39, 0xe4, 0xa2, 0x00, 0x30, 0x1a, 0xc0,
	0xf6, 0xa5, 0x16, 0xde, 0x3f, 0xa1, 0x2a, 0xac, 0x16, 0xa8, 0x52, 0xeb, 0x00, 0x81, 0x72, 0x8f,
	0x6e, 0x30, 0x30, 0xd9, 0x54, 0x69, 0x0d, 0x69, 0x99, 0xdd, 0x0f, 0xbd, 0x8f, 0x2a, 0xf9, 0x7f,
	0xb3, 0x5d, 0x7c, 0xf8, 0xda, 0xa3, 0x09, 0x39, 0x91, 0xa0, 0xb5, 0x92, 0x98, 0x83, 0x19, 0x9a,
	0x89, 0x5a, 0xb0, 0x28, 0x8e, 0x92, 0xce, 0xe8, 0xa7, 0x4d, 0x53, 0x42, 0xe5, 0xe1, 0xea, 0x2e,
	0x5c, 0x0d, 0xe1, 0x3f, 0x08, 0xa5, 0xa4, 0x6e, 0x44, 0xa1, 0x58, 0x2d, 0x24, 0xc2, 0x4c, 0x63,
	0xd2, 0x9d, 0x28, 0x2f, 0x5d, 0x6e, 0xb7, 0x77, 0x59, 0x3d, 0xa0, 0x43, 0x8b, 0xf6, 0xc8, 0xbf,
	0x22, 0x37, 0x78, 0x8f, 0x4e, 0xa0, 0xca, 0x96, 0xac, 0x11, 0x22, 0x47, 0x1e, 0x3d, 0x27, 0xed,
	0x4c, 0xe3, 0xf4, 0x56, 0xf8, 0x19, 0x6b, 0x06, 0xbe, 0xd7, 0x5b, 0x56, 0x28, 0x14, 0x13, 0x81,
	0x82, 0xb5, 0x76, 0xac, 0xd4, 0xe1, 0xb6, 0x58, 0x0c, 0x8d, 0x47, 0x61, 0xa4, 0xf2, 0xac, 0x1d,
	0x47, 0x49, 0x63, 0x74, 0xe4, 0xd1, 0x33, 0xd2, 0x90, 0x30, 0x37, 0xc8, 0x3a, 0x01, 0xee, 0x04,
	0xbd, 0x24, 0xa7, 0x16, 0x9e, 0x95, 0x9b, 0xdb, 0xf2, 0x8f, 0x9e, 0x91, 0xb8, 0x96, 0x74, 0x46,
	0xbf, 0x7c, 0xca, 0x48, 0x4b, 0x3a, 0x25, 0x10, 0x1c, 0xeb, 0x86, 0x07, 0x94, 0xf2, 0xfa, 0xee,
	0x75, 0xcd, 0xa3, 0xd5, 0x9a, 0x47, 0xef, 0x6b, 0x1e, 0xbd, 0x6c, 0x78, 0x65, 0xb5, 0xe1, 0x95,
	0xb7, 0x0d, 0xaf, 0x3c, 0x0e, 0xb2, 0x1c, 0x67, 0xf3, 0x71, 0x2a, 0xa1, 0xe8, 0x1f, 0x56, 0xd8,
	0xdf, 0xd7, 0xbd, 0xf8, 0x1e, 0x71, 0x69, 0x95, 0x1f, 0x37, 0x43, 0xe3, 0x57, 0x9f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd9, 0xc6, 0x6f, 0x51, 0x12, 0x02, 0x00, 0x00,
}

func (m *ClassTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClassTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClassTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.PowerupTemplates) > 0 {
		for iNdEx := len(m.PowerupTemplates) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PowerupTemplates[iNdEx])
			copy(dAtA[i:], m.PowerupTemplates[iNdEx])
			i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.PowerupTemplates[iNdEx])))
			i--
			dAtA[i] = 0x52
		}
	}
	if m.Count != 0 {
		i = encodeVarintClassTemplate(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x48
	}
	if m.MaxInstances != 0 {
		i = encodeVarintClassTemplate(dAtA, i, uint64(m.MaxInstances))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.GltfHash) > 0 {
		i -= len(m.GltfHash)
		copy(dAtA[i:], m.GltfHash)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.GltfHash)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MintStrategy) > 0 {
		i -= len(m.MintStrategy)
		copy(dAtA[i:], m.MintStrategy)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.MintStrategy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassTemplateIndex) > 0 {
		i -= len(m.ClassTemplateIndex)
		copy(dAtA[i:], m.ClassTemplateIndex)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.ClassTemplateIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CollectionIndex) > 0 {
		i -= len(m.CollectionIndex)
		copy(dAtA[i:], m.CollectionIndex)
		i = encodeVarintClassTemplate(dAtA, i, uint64(len(m.CollectionIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintClassTemplate(dAtA []byte, offset int, v uint64) int {
	offset -= sovClassTemplate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClassTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CollectionIndex)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.ClassTemplateIndex)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.MintStrategy)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.GltfHash)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	if m.MaxInstances != 0 {
		n += 1 + sovClassTemplate(uint64(m.MaxInstances))
	}
	if m.Count != 0 {
		n += 1 + sovClassTemplate(uint64(m.Count))
	}
	if len(m.PowerupTemplates) > 0 {
		for _, s := range m.PowerupTemplates {
			l = len(s)
			n += 1 + l + sovClassTemplate(uint64(l))
		}
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovClassTemplate(uint64(l))
	}
	return n
}

func sovClassTemplate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClassTemplate(x uint64) (n int) {
	return sovClassTemplate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClassTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClassTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClassTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClassTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollectionIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassTemplateIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassTemplateIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintStrategy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MintStrategy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GltfHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GltfHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxInstances", wireType)
			}
			m.MaxInstances = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxInstances |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerupTemplates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PowerupTemplates = append(m.PowerupTemplates, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClassTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClassTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClassTemplate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClassTemplate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClassTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClassTemplate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClassTemplate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClassTemplate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClassTemplate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClassTemplate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClassTemplate = fmt.Errorf("proto: unexpected end of group")
)
